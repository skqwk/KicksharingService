version: "3.9"
services:
  app:
    image: adoptopenjdk:11-jre-hotspot
    container_name: kicksharing
    volumes:
      - ./kicksharing.jar:/kicksharing.jar
    command: java -jar kicksharing.jar
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=${KAFKA_CONTAINER}:${KAFKA_PORT}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    container_name: ${DATABASE_HOST}
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    command: postgres -p ${DATABASE_PORT}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - ./database_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 2s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: ${ZOOKEEPER_CONTAINER}
    ports:
      - ${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}
  kafka:
    image: wurstmeister/kafka
    container_name: ${KAFKA_CONTAINER}
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_CONTAINER}
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_CONTAINER}:${ZOOKEEPER_PORT}
